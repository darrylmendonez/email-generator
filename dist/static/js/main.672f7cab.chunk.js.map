{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/emails/EmailSummary.js","components/emails/EmailList.js","components/dashboard/Dashboard.js","components/emails/EmailDetails.js","components/auth/LogIn.js","components/auth/Register.js","components/emails/CreateEmail.js","store/actions/emailActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/emailReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","EmailSummary","_ref","email","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","EmailList","emails","map","id","key","emails_EmailSummary","Dashboard","_this$props","this","emails_EmailList","dashboard_Notifications","Redirect","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","ownProps","match","params","data","description","LogIn","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Register","firstName","lastName","register","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreateEmail","date","descriptions","highlights","createEmail","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","EmailDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","emailReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.672f7cab.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/create'>New Email</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n        { props.profile.initials }\n      </NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' })\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' });\n    });\n  }\n}\n\nexport const register = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err})\n    })\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/register'>Register</NavLink></li>\n      <li><NavLink to='/login'>Log In</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Email Generator</Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\n\nconst Notifications = () => {\n  return (\n    <div>\n      <p>Notifications</p>\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst EmailSummary = ({email}) => {\n  return (\n    <div className=\"card z-depth-0 projet-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{ email.title }</span>\n        <p>Posted by { email.authorFirstName } { email.authorLastName }</p>\n        <p className=\"grey-text\">{ moment( email.createdAt.toDate() ).calendar() }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default EmailSummary","import React from 'react'\nimport EmailSummary from './EmailSummary'\nimport { Link } from 'react-router-dom'\n\nconst EmailList = ({emails}) => {\n  return (\n    <div className=\"project-list section\">\n      { emails && emails.map(email => {\n        return (\n          <Link to={'/email/' + email.id} key={email.id}>\n            <EmailSummary email={email} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default EmailList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport EmailList from '../emails/EmailList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { emails, auth } = this.props;\n    if (!auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <EmailList emails={emails} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    emails: state.firestore.ordered.emails,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'emails', orderBy: ['createdAt', 'desc'] }\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst EmailDetails = (props) => {\n  const { email, auth } = props;\n  if (!auth.uid) return <Redirect to='/' />\n\n  if (email) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{ email.title }</span>\n            <p>{ email.description }</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by { email.authorFirstName } { email.authorLastName }</div>\n            <div>{ moment( email.createdAt.toDate() ).calendar() }</div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const emails = state.firestore.data.emails;\n  const email = emails ? emails[id] : null;\n  return {\n    email: email,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'emails' }\n  ])\n)(EmailDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Log In</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Log in</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{ authError }</p> : null }\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { register } from '../../store/actions/authActions'\n\nclass Register extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.register(this.state)\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Register</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{ authError }</p> : null }\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    register: (newUser) => dispatch(register(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createEmail } from '../../store/actions/emailActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateEmail extends Component {\n  state = {\n    title: '',\n    date: '',\n    descriptions: [],\n    highlights: []\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createEmail(this.state)\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/' />\n\n    return (\n      <div>\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Create Email Template</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"date\">Date</label>\n              <input type=\"text\" id=\"date\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"highlights\">Highlights</label>\n              <textarea id=\"highlights\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createEmail: (email) => dispatch(createEmail(email))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEmail)\n","export const createEmail = (email) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    // make asyc call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('emails').add({\n      ...email,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_EMAIL', email });\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_EMAIL_ERROR', err });\n    })\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport EmailDetails from './components/emails/EmailDetails'\nimport LogIn from './components/auth/LogIn'\nimport Register from './components/auth/Register'\nimport CreateEmail from './components/emails/CreateEmail'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/email/:id' component={EmailDetails} />\n            <Route path='/login' component={LogIn} />\n            <Route path='/register' component={Register} />\n            <Route path='/create' component={CreateEmail} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'LOGIN_ERROR':\n    console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n      case 'SIGNOUT_SUCCESS':\n        console.log('signout success');\n        return state;\n      case 'SIGNUP_SUCCESS':\n        console.log('signup success');\n        return {\n          ...state,\n          authError: null\n        }\n      case 'SIGNUP_ERROR':\n        console.log('signup error')\n        return {\n          ...state,\n          authError: action.err.message\n        }\n      default:\n        return state;\n  }\n}\n\nexport default authReducer","const initState = {\n  emails: [\n    {id: '1', title: 'New Journals', date: 'December 1-15', highlights: ['lorem ipsum', 'muspi merol'], descriptions: ['American Journal #151 analyzes the latest in pharma stock companies based out of New Jersey', 'Pharma Con 2019 overviews the latest vendors and guest speakers attending Pharma Con 2019 coming this March']},\n    {id: '2', title: 'Latest Research', date: 'December 15-31', highlights: ['lorem ipsum', 'muspi merol'], descriptions: ['Scientific Discovery #32 overviews the latest research in oncology', 'Global Medicine shares the results of clinical trials done for cancer research']},\n    {id: '3', title: 'New Year, Same Focus', date: 'January 1-15', highlights: ['lorem  ipsum', 'muspi merol'], descriptions: ['Monthly Research #12 analyzes the latest in pharma stock companies based out of New Jersey', 'Pipeline Bulletin #45 goes in depth into current clinical trials']},    \n  ]\n}\n\nconst emailReducer = (state = initState, action) => {\n  switch(action.type) {\n    case 'CREATE_EMAIL': \n      console.log('created email', action.email);\n      return state;\n    case 'CREATE_EMAIL_ERROR':\n      console.log('create email error', action.err);\n      return state;\n    default:\n      return state\n  }\n}\n\nexport default emailReducer","import authReducer from './authReducer'\nimport emailReducer from './emailReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  email: emailReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyD7aIPR-8wa1yB0e_xB_ugghuN4Xjg36RU\",\n  authDomain: \"email-generator-db.firebaseapp.com\",\n  databaseURL: \"https://email-generator-db.firebaseio.com\",\n  projectId: \"email-generator-db\",\n  storageBucket: \"email-generator-db.appspot.com\",\n  messagingSenderId: \"199189499975\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n})"],"sourceRoot":""}